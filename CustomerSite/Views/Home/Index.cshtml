@using Ecommerce.DTO.DTOs
@using Ecommerce.DTO.Enum
@{
    ViewData["Title"] = "Home Page";
    List<CategoryDTO> categories = ViewBag.categories;
    List<BrandDTO> brands = ViewBag.brands;
    List<ProductDTO> highRatings = ViewBag.highRatings;
    List<ProductDTO> newProducts = ViewBag.newProducts;
    int limit = 3;
}
<link rel="stylesheet" href="/css/ProductPartial.css" />

<!--Banner Carousel-->
<div class="slide-wrapper">
    <div id="bannerSlide" class="carousel slide" data-bs-interval="5000" data-bs-ride="true">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="~/Images/Index/Banner1.jpg" class="d-block h-25 w-100" alt="Banner1">
            </div>
            <div class="carousel-item">
                <img src="~/Images/Index/Banner2.jpg" class="d-block h-25 w-100" alt="Banner2">
            </div>
            <div class="carousel-item">
                <img src="~/Images/Index/Banner3.jpg" class="d-block h-25 w-100" alt="Banner3">
            </div>
        </div>
        <div class="slide-control">
            <button class="carousel-control-prev" type="button" data-bs-target="#bannerSlide" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#bannerSlide" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>
<div class="col-2 p-3" style="background-color:lightgray">
    <div class="p-0" style="position: sticky; top: 10%;">

        <!--Collapse menu for Categories-->
        @if (categories != null && categories.Count > 0)
        {
            <div class="p-0">
                <div class="m-0" type="button" data-bs-toggle="collapse" data-bs-target="#categories" aria-expanded="false">
                    <h5>CATEGORIES</h5>
                </div>
                <div id="categories" class="collapse btn-group-vertical p-3 m-0">
                    @foreach (CategoryDTO category in categories)
                    {
                        if(category.Status != (byte)CommonStatus.NotAvailable){
                            <a class="btn text-start" asp-action="ProductsByCategory" asp-controller="Product" asp-route-categoryName="@category.Name">
                                <h6>@category.Name.ToUpper()</h6>
                            </a>
                        }
                    }
                </div>
            </div>
        }
        <hr />

        <!--Collapse menu for Brands-->
        @if (brands != null && (brands.Count > 0))
        {
            <div class="p-0">
                <div class="m-0" type="button" data-bs-toggle="collapse" data-bs-target="#brands" aria-expanded="false">
                    <h5>BRANDS</h5>
                </div>
                <div id="brands" class="collapse btn-group-vertical p-3 m-0">
                    @foreach (BrandDTO brand in brands)
                    {
                        if(brand.Status != (byte)CommonStatus.NotAvailable){
                            <a class="btn text-start" asp-action="ProductsByBrand" asp-controller="Product" asp-route-brandName="@brand.Name">
                                <h6>@brand.Name.ToUpper()</h6>
                            </a>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>

<div class="text-center col-10">
    @if (newProducts != null && newProducts.Count > 0)
    {
        int newPages = (int)Math.Ceiling((double)newProducts.Count / limit);
        <h4 class="mt-3">New products</h4>
@*        <div class="row">
            @foreach (ProductDTO product in newProducts)
            {
                if (product.Status == 1)
                {
                    //pass count to partial view as a viewdata key-value
                    //so the slide controls know which carousel to slide
                    ViewData["count"] = count;
                    <partial view-data="ViewData" name="../Product/ProductPartialView" for="@product" />
                    count++;
                }
            }
        </div>*@
        <!--Carousel for new products-->
        <div class="slide-wrapper bg-secondary p-3">
            <div id="newSlide" class="carousel slide" data-bs-interval="false">
                <div class="carousel-inner">
                    @for (var i = 1; i <= newPages; i++)
                    {
                        <div class="carousel-item @(i==1?"active":"")">
                            <div class="row justify-content-center">
                            @for (var j = (i - 1) * limit; (j < (i - 1) * limit + limit) && (j < newProducts.Count); j++)
                            {
                                if(newProducts[j].Status != (byte)CommonStatus.NotAvailable 
                                   && newProducts[j].Status != (byte)ProductStatus.Suspended){
                                    <partial name="../Product/ProductPartialImg" for="@newProducts[j]" />
                                }
                            }
                            </div>
                        </div>
                    }
                </div>
                @if (newPages > 1)
                {
                    <div class="carousel-indicators" style="height:1%">
                        @for (int i = 0; i < newPages; i++)
                        {
                            <button type="button" data-bs-target="#newSlide"
                        data-bs-slide-to="@i" @(i==0?"aria-current=true":"") aria-label="new@(i+1)" class="slide-btn bg-info @(i == 0?"active":"")">
                            </button>
                        }
                    </div>
                    <div class="slide-control">
                        <button class="carousel-control-prev" style="width:5%" type="button" data-bs-target="#newSlide" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" style="width:5%" type="button" data-bs-target="#newSlide" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
            </div>
        </div>
        <hr />
    }

    @if (highRatings != null && highRatings.Count > 0)
    {
        int highratingPages = (int)Math.Ceiling((double)highRatings.Count / limit);
        <h4>High ratings</h4>
        @*<div class="row">
            @foreach (ProductDTO product in highRatings)
            {
                if (product.Status == 1)
                {
                    //pass count to partial view as a viewdata key-value
                    //so the slide controls know which carousel to slide
                    ViewData["count"] = count;
                    <partial view-data="ViewData" name="../Product/ProductPartialView" for="@product" />
                    count++;
                }
            }
        </div>*@
        <!--Carousel for highrating products-->
        <div class="slide-wrapper bg-secondary p-3">
            <div id="highratingSlide" class="carousel slide" data-bs-interval="0" data-bs-ride="true">
                <div class="carousel-inner">
                    @for (var i = 1; i <= highratingPages; i++)
                    {
                        <div class="carousel-item @(i==1?"active":"")">
                            <div class="row justify-content-center">
                                @for (var j = (i - 1) * limit; (j < (i - 1) * limit + limit) && (j < highRatings.Count); j++)
                                {
                                    if(highRatings[j].Status != (byte)CommonStatus.NotAvailable
                                       && highRatings[j].Status != (byte)ProductStatus.Suspended)
                                    {
                                        <partial view-data="ViewData" name="../Product/ProductPartialImg" for="@highRatings[j]" />
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
                @if (highratingPages > 1)
                {
                    <div class="carousel-indicators" style="height:1%">
                        @for (int i = 0; i < highratingPages; i++)
                        {
                            <button type="button" data-bs-target="#highratingSlide"
                        data-bs-slide-to="@i" aria-current="true" aria-label="Slide @(i+1)" class="slide-btn bg-info @(i == 0?"active":"")">
                            </button>
                        }
                    </div>
                    <div class="slide-control">
                        <button class="carousel-control-prev" style="width:5%" type="button" data-bs-target="#highratingSlide" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" style="width:5%" type="button" data-bs-target="#highratingSlide" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                }
            </div>
        </div>
        <hr />
    }
</div>
